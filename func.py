#!/usr/bin/env python
# coding: utf-8

import random
import os
import json
import gzip
from urlparse import urlparse, parse_qs, unquote

from models import *

manually = True


def get_page_object(po):
    print '../page_objects/offers/{}.py'.format(po)
    with open('../page_objects/offers/{}.py'.format(po), 'r') as f:
        text = f.read().decode('utf-8')
    return text


def get_country_data(request):
    if request.get("country") is not None:
        source_db = "profiles_{0}".format(request["country"][0]).lower()
        try:
            if os.path.exists("db/{0}.json.gz".format(source_db)):
                with gzip.open("db/{0}.json.gz".format(source_db),
                               "rb") as user_data_db:
                    userdata = random.choice(json.load(user_data_db))
            else:
                with open("db/{0}.json".format(source_db),
                          "rb") as user_data_db:
                    line = random.choice(user_data_db.readlines())
                    print line
                    userdata = json.loads(line)
        except IOError:
            userdata = {}
        return userdata
    else:
        return {}


def get_proxy(request):
    proxies = [
    ]
    proxy_ind = random.randint(0, len(proxies) - 1)
    return {"proxy_type": "SOCKS5",
            "ip": proxies[proxy_ind],
            "id": proxy_ind}


def get_retention_record(path, request):
    task_id = path.rsplit("/", 1)[-1].split("?", 1)[0]
    filename = "db/retension/ret_{0}.json.gz".format(task_id)
    try:
        with gzip.open(filename, "rb") as f:
            data = f.read()
    except IOError as err:
        return {"success": False, "reason": str(err)}
    return {"success": True, "data": data}


def add_retention_data(request):
    task_id = request["surf_task_id"]
    filename = "db/retension/ret_{0}.json.gz".format(task_id)
    try:
        with gzip.open(filename, "wb") as f:
            f.write(unquote(request["data"]))
    except IOError as err:
        return {"success": False, "reason": str(err)}
    return {"success": True, "message": "saved to {0}".format(filename)}


def get_multidata(request):
    buckets = {'profile', 'leadleadersfb', 'datingsoi', 'contestchest_PV',
               'fbverified', 'mixtape', 'OlyaAU', 'PublisherWall', 'leonFBcamp',
               'amazando_uk', 'greenflag', 'tolead', 'frgillymob', 'aufbverified',
               'fbNOTverified', 'xdata'}
    if 'eur' in request["bucket"]:
        data = {'number': '5562963149116111',
                'cvv': '850',
                'first_name': 'Ethan',
                'last_name': 'Whittaker',
                'year': '2020',
                'month': '09',
                'amount': '12',
                'type': 'Mastercard'
                }
        return {"a": "/multi_data/get_random",
                "bucket": request["bucket"],
                "country": request["country"],
                "created_on": "2017-09-15 13:04:32",
                "data": json.dumps(data),
                "id": 8,
                "is_blocked": False,
                "updated_on": "2017-03-31 13:04:32"}
    if 'usd' in request["bucket"]:
        data = {'number': '5562962135116390',
                'cvv': '640',
                'first_name': 'Leo',
                'last_name': 'Swift',
                'year': '2020',
                'month': '09',
                'amount': '4',
                'type': 'Mastercard'
                }
        return {"a": "/multi_data/get_random",
                "bucket": request["bucket"],
                "country": request["country"],
                "created_on": "2017-09-15 13:04:32",
                "data": json.dumps(data),
                "id": 8,
                "is_blocked": False,
                "updated_on": "2017-03-31 13:04:32"}
    if any(bucket in request["bucket"] for bucket in buckets):
        data = get_country_data({"country": (request["country"],)})
        return {"a": "/multi_data/get_random",
                "bucket": request["bucket"],
                "country": request["country"],
                "created_on": "2017-03-31 13:04:32",
                "data": json.dumps(data) if data else None,
                "id": 9,
                "is_blocked": False,
                "updated_on": "2017-03-31 13:04:32"}
    if "win_message" in request["bucket"]:
        # data = 'Test case'
        data = 'I want a gift!!!'
        return {"a": "/multi_data/get_random",
                "bucket": request["bucket"],
                "country": request["country"],
                "created_on": "2017-03-31 13:04:32",
                "data": data,
                "id": 1,
                "is_blocked": False,
                "updated_on": "2017-03-31 13:04:32"}
    if "message" in request["bucket"]:
        # data = 'Test case'
        data = '{"intro": "I would say I am kind , understanding,' \
               ' good listener, independent, hard worker.",' \
               ' "title": "Well hello", "lookfor": ""}'
        return {"a": "/multi_data/get_random",
                "bucket": request["bucket"],
                "country": request["country"],
                "created_on": "2017-03-31 13:04:32",
                "data": data,
                "id": 1,
                "is_blocked": False,
                "updated_on": "2017-03-31 13:04:32"}
    if "photo" in request["bucket"]:
        data = ''
        return {"a": "/multi_data/get_random",
                "bucket": request["bucket"],
                "country": request["country"],
                "created_on": "2017-03-31 13:04:32",
                "data": data,
                "id": 1,
                "is_blocked": False,
                "updated_on": "2017-03-31 13:04:32"}
    return {"a": "/multi_data/get_random",
            "bucket": request["bucket"],
            "country": request["country"],
            "created_on": "2017-03-31 13:04:32",
            "data": None,
            "id": 0,
            "is_blocked": False,
            "updated_on": "2017-03-31 13:04:32"}


def get_photo_url(path, request):
    gender = request.get("gender")
    gender = gender[0] if gender else None
    url = 'http://localhost:4002/image/?name={0}'
    # TODO make file_path own class or server class field
    file_path = "/local_path/"
    if gender == "male":
        img_folder = 'upload_pics'
    elif gender == "female":
        img_folder = '5k Female Photos'
    else:
        return {}
    img_path = path.join(file_path, img_folder)
    img_name = random.choice(os.listdir(img_path))
    return {"photo_url": url.format(path.join(img_folder, img_name))}


def page_object_resolve(request):
    # for domen in inventory:
    inventory = {
        '40pluscontactclub.com': ('40pluscontactclub_w',
                                  '40pluscontactclub_m'),
        '40plusskontakt.com': '40plusskontakt',
        '45plusyhteys.com': '45plusyhteys_w',
        'm.wantubad.com': '4club',
        '4singles.com': '4singles',
        'start.6raum.com': '6raum',
        'abuelabusca.com': 'abuelabusca',
        'adultswipe.com': 'adultswipe',
        'affairalert.com': 'affairalert',
        'mobile.affairalert.com': 'affairalert_m',
        'm.affairdating.com': 'affairdating',
        'affaire-caliente.com': 'affaire_caliente',
        'm.anoniemdaten.nl': 'anoniemdaten',
        'ask.fm': ('ask', 'ask_m'),
        'aussie-prizes.com': ('aussie_prizes_w', 'aussie_prizes_m'),
        'bangaroobabes.com.au': 'bangaroobabes',
        'start.badults.dk': 'badults_dk',
        'bangsociety.com': ('bangsociety_w', 'bangsociety_m'),
        'bareennatt.com': 'bareennatt',
        'mobile.bbwdesire.com': 'bbwdesire',
        'bbwdesire.com': 'bbwdesire',
        'bigbrandgiftcards.com': 'bigbrandgiftcards',
        'bettgeheimnis.com': 'bettgeheimnis',
        'c-date.co.uk': 'c_date_co_uk',
        'c-date.no': 'c_date_no',
        'c-date.se': 'c_date_se',
        'camsoda.com': 'camsoda',
        'casualclub.com': ('casualclub_w', 'casualclub_m'),
        'casualintentions.com': 'casualintentions',
        'cellphonereward.com': ('cellphonereward', 'cellphonereward_m'),
        'chatx.es': ('chatx_w', 'chatx_m'),
        'start.cheating69.se': ('cheating69', 'cheating69_m'),
        'start.cheating69.com.au': 'cheating69_com_au',
        'start.cheating69.no': ('cheating69_no_w', 'cheating69_no'),
        'cheatingcougars.com': 'cheatingcougars',
        'mobile.cheatingcougars.com': 'cheatingcougars_cd_m',
        'cheatinghookup.com': 'cheatinghookup',
        'cheekyshag.co': 'cheekyshag',
        'cellphoneincentives.com': ('choicemobilephone_w', 'choicemobilephone'),
        'choicemobilephone.com': ('choicemobilephone_w', 'choicemobilephone'),
        'consumergiftcards.com': ('choicemobilephone_w', 'choicemobilephone'),
        'newphonereward.com': ('choicemobilephone_w', 'choicemobilephone'),
        'wwa.click-and-date.de': ('click_and_date', 'click_and_date_m'),
        'aldi.onlineprizedraws-293.com': 'clickstracking',
        'consumerpromotionsonline.com': ('consumerpromotionsonline', 'consumerpromotionsonline_m'),
        'consumerpromousa.com': ('consumerpromotionsonline', 'consumerpromotionsonline_m'),
        'contactmature.com': 'contactmature',
        'contactosecreto.com': 'contactosecreto',
        'contattosegreto.com': 'contattosegreto',
        'cougars.fm': ('', 'cougars_fm'),
        'singles.fm': ('cougars_fm', 'singles_fm_m'),
        'wwa.daily-date.de': 'daily_date_de',
        'wwa.dailyaffair.co.uk': 'dailyaffair',
        'dailydate.dk': 'dailydate',
        'wwa.daily.dating': 'daily_dating',
        'dailyflirt.de': 'dailyflirt',
        'dailyflirt.se': 'dailyflirt_se',
        'dammisesso.com': 'dammisesso',
        'start.datescanner18.com': 'datescanner18',
        'start.datingarea.eu': 'datingarea',
        'dealzingo.com': 'dealzingo',
        'dein-mediapaket.de': 'dein_mediapaket',
        '500euro-gutschein.de': 'deine_auswahl',
        'ausgewaehlter-gewinner.de': 'deine_auswahl',
        'deine-auswahl.de': ('deine_auswahl', 'deine_auswahl_m'),
        'deinsecretdate.com': 'deinsecretdate',
        'desktop.my-prize.co.uk': 'desktop_my_prize_co_uk',
        'your-prize.co.uk': ('desktop_your_prize_co_uk', ''),
        'desktop.my-prize.de': 'desktop_my_prize_de',
        'desktop.deine-wunschbox.de': ('desktop_real_prizes_w', 'desktop_real_prizes_m'),
        'smartphone-auswahl.de': 'desktop_real_prizes',
        'desktop.real-prizes.de': ('desktop_real_prizes_w',
                                   'desktop_real_prizes_m'),
        'desktop.your-prize.co.uk': 'desktop_your_prize_co_uk',
        'desktop.your-prize.de': 'desktop_your_prize_de',
        'discreetflirtclub.com': 'discreetflirtclub',
        'ebonyslutbook.com': ('ebonyslutbook', 'ebonyslutbook_m'),
        'erfarenedatere.dk': ('erfarenedatere', 'erfarenedatere_m'),
        'erotickekontakty.com': 'erotickekontakty',
        'start.eroverein.com': 'eroverein',
        'm.fristmignu.dk': 'fristmignu',
        'flirt4more.nl': 'flirt4more',
        'flirt-fever.de': 'flirt_fever_de',
        'mobile.flirtbuddies.com': 'flirtbuddies',
        'flirtcontactclub.com': ('flirtcontactclub', 'flirtcontactclub_m'),
        'flirtmatch.se': ('flirtmatch', 'flirtmatch_m'),
        'flirtsegretimature.com': 'flirtsegretimature',
        'm.flirtydesires.com': 'flirtydesires',
        'follamigos.com': 'follamigos',
        '4club.com': ('', 'together2night_m'),
        'freie-gutschein-auswahl.de': 'freie_gutschein_auswahl_de',
        'start.fremdgehen69.com': ('fremdgehen69', 'fremdgehen69_m'),
        'fritt-val.se': 'fritt_val',
        'fuegodevida.com': ('fuegodevida', 'fuegodevida_m'),
        'getnaughty.com': 'getnaughty',
        'm.getnaughty.com': 'getnaughty',
        'gewinner-mediapaket.de': 'gewinner_mediapaket_de',
        'gros-bisous.com': 'gros_bisous',
        'haciendo-amor-hoy.com': 'haciendo_amor_hoy',
        'heisseaffaire.de': 'heisseaffaire',
        'hemligkontakt.com': 'hemligkontakt',
        'hemmeligflirt.com': ('hemmeligflirt_w', 'hemmeligflirt_m'),
        'click.dates.hookup.com': 'hookup_w',
        'click.hookupcams.com': ('hookupcams', 'hookupcams_m'),
        'hookups.co.uk': 'hookups',
        'hookupsfinder.com': 'hookupsfinder',
        'hotrussiababes.com': 'hotrussiababes',
        'm.iamnaughty.com': 'iamnaughty',
        'iamnaughty.com': 'iamnaughty',
        'instanthookups.com': ('instanthookups', 'easysex_m'),
        'wwa.just-date.de': 'justdate',
        'juste-pour-une-baise.com': 'juste_pour_une_baise',
        'es.kismia.com': 'kismia',
        'pt.kismia.com': 'kismia',
        'start.kypsaaseuraa.fi': 'kypsaaseuraa',
        'it.lafabbricadeipremi.com': 'lafabbricadeipremi',
        'liaisons-sexy.com': 'liaisons_sexy',
        'localfling.co.uk': ('localfling', 'localfling_m'),
        'lonelywifehookup.com': 'lonelywifehookup',
        'mobile.lonelywifehookup.com': 'lonelywifehookup_m',
        'start.lustkantine.com': ('lustkantine', 'lustkantine_m'),
        'start.lustparkplatz.com': 'lustparkplatz',
        'maduras.fm': 'maduras_fm',
        'mail.mailabyss.com': 'mailabyss',
        'mailabyss.com': 'mailabyss',
        'matchclub.dk': 'matchclub',
        'l.maturecontacten.nl': 'maturecontacten',
        'matureflirtclub.com': 'matureflirtclub',
        'maturelibertine.com': 'maturelibertine',
        'meetlocalmatures.com': 'meetlocalmatures',
        'secretkontaktdienst.com': 'meetlocalmatures',
        'mein45pluskontakt.com': 'mein45pluskontakt_w',
        'melollevoahora.com': 'melollevoahora',
        'members2.hookup.com': 'members2_hookup',
        'start.milf-area.no': 'milf_area_no',
        'start.milf-area.se': 'milf_area_se',
        'start.milf-finder.com': 'milf_finder',
        'milfaholic.com': 'milfaholic',
        'mobile.milfaholic.com': 'milfaholic_m',
        'milfsaffair.com': 'milfsaffair',
        'milfs.de': ('milfs_de', 'milfs_de_m'),
        'start.mognaladies.se': 'mognaladies',
        'myer-giftcard.onlineprizedraws-753.com': 'myer_giftcard',
        'myoffers.co.uk': 'myoffers',
        'mysecretsexcontact.com': 'mysecretsexcontact',
        'nakedlocals.com': 'nakedlocals_w',
        'mobile.nakedlocals.com': 'nakedlocals_cd_m',
        'nationalrewardsurveys.com': 'nationalrewardsurveys',
        'start.naughtybook.no': 'naughtybook',
        'start.naughtybook.dk': 'naughtybook_dk',
        'start.naughtybook.se': ('naughtybook_se', 'naughtybook_se_m'),
        'fp.oneshotdate.com': ('oneshotdate_w', 'oneshotdate_m'),
        'wwa.only-dates.de': 'only_dates_de',
        'oz-offers.com': ('oz_offers_w', 'oz_offers_m'),
        'paradisomaturo.it': ('paradisomaturo_w', 'paradisomaturo_m'),
        'pdv.plan-cul-de-fou.com': 'plan_cul_de_fou',
        'popularpromotionsonline.com': 'popularpromotionsonline',
        'iej.pzs-com.co': 'pzs_com_co',
        'appleprizes.lp.quiztionnaire.com': 'quiztionnaire_w',
        'rdv-minute.com': 'rdv_minute',
        'reiferflirtgesucht.com': 'reiferflirtgesucht',
        'dpm.reifefrauen.com': 'reifefrauen',
        'reifekontakte.de': 'reifekontakte',
        'reifesexflirts.com': 'reifesexflirts',
        'rencontreavenue.com': 'rencontreavenue',
        'consumerproductsusa.com': ('consumerproductsusa_w', 'consumerproductsusa_m'),
        'electronicconsumerusa.com': ('retailusapromo', 'retailusapromo_m'),
        'electronicproductzone.com': ('electronicproductzone_w', 'electronicproductzone_m'),
        'electronicsproductzone.com': ('electronicsproductzone_w', 'electronicsproductzone_m'),
        'onlinelectronicsusa.com': ('retailusapromo', 'retailusapromo_m'),
        'onlinepromotionsusa.com': ('onlinepromotionsusa_w', 'onlinepromotionsusa_m'),
        'retailproductzone.com': ('retailproductzone_w', 'retailproductzone_m'),
        'retailusapromo.com': ('retailusapromo', 'retailusapromo_m'),
        'rewards-clear-google.com.s3-website-us-west-2.amazonaws.com': ('retailusapromo', 'retailusapromo_m'),
        'webpromotionsusa.com': ('retailusapromo', 'retailusapromo_m'),
        'rijpeflirtclub.nl': 'rijpeflirtclub',
        'rlmconsole.de': 'rlmconsole_au',
        'routedelamour.com': 'routedelamour',
        'rumgepoppe.ch': ('rumgepoppe_w', 'rumgepoppe_m'),
        'safefling.com': 'safefling',
        'secretdate.com': 'secretdate',
        'secretmaturecontact.com': 'secretmaturecontact',
        'secretmatureflirt.com': 'secretmatureflirt',
        'mysecretflirts.com': 'secretmatureflirt',
        'secretsexservice.com': 'secretsexservice',
        'seekingmilf.com': 'seekingmilf',
        'sesso-oggi.it': 'sesso_oggi',
        'sesso-pazzo.com': 'sesso_pazzo',
        'sessooggi.com': 'sessooggi',
        'sexdatecontacten.nl': 'sexdatecontacten',
        'sexdategesucht.com': 'sexdategesucht',
        'sexdatesheute.com': 'sexdatesheute',
        'm.sexigdate.se': 'sexigdate',
        'start.sexleksjoner.no': 'sexleksjoner',
        'sexlugar.es': 'sexlugar',
        'start.sexinspektor.com': ('', 'sexinspektor_m'),
        'start.sexpartnerclub.nl': 'sexpartnerclub',
        'shagcity.co.uk': ('shagcity', 'shagcity_m'),
        'shagtogether.com': 'shagtogether',
        'slemflirt.com': 'slemflirt',
        'spdate.com': ('spdate_w', 'spdate_m'),
        'swooosh.co.uk': 'swooosh',
        'tempodates.de': 'tempodates',
        'toplaptoprewards.com': 'toplaptoprewards',
        'tu-baises.com': 'tu_baises',
        'tudiaserahoy.com': 'tudiaserahoy',
        'uksexflirts.com': ('uksexflirts_w', 'uksexflirts_m'),
        'm.upforit.com': 'upforit',
        'vaniki.co.uk': ('vaniki_w', 'vaniki_m'),
        'vaniki.com': ('vaniki_w', 'vaniki_m'),
        'l.viaviasexdates.nl': ('viaviasexdates', 'viaviasexdates_m'),
        'vuxenknullkontakt.com': 'vuxenknullkontakt',
        'lp.want-to-win.com': 'want_to_win_w',
        'lp1.want-to-win.com': ('want_to_win_w', 'want_to_win_m'),
        'wasfickt.at': ('wasfickt', 'wasfickt_m'),
        'wasfickt.ch': ('wasfickt', 'wasfickt_m'),
        'wwa.wow-date.de': ('wow_date', 'wow_date_m'),
        'wwa.wowdate.de': ('wow_date', 'wow_date_m'),
        'start.xdates18.com': 'xdates18',
        'xdating.com': 'xdating',
        'xflirt.com': 'xflirt_w',
        'new-zealand.xlwin.net': 'xlwin',
        'australia.xlwin.net': 'xlwin_au',
        'start.xpartner.com': 'xpartner',
        'xtrasizeofficial.com': 'xtralarge',
        'mobil.your-prize.co.uk': 'your_prize_co_uk',
        'youtube.com': 'youtube',
        'zwinkr.de': 'zwinkr',
        'backpage.com': 'backpage',
        'konsumentenumfrage.de': ('konsumentenumfrage_w', 'konsumentenumfrage_m'),
        'bonbon-paket.de': 'bonbon_paket_w',
        'rewardexplorers.com': ('rewardexplorers_w', 'rewardexplorers_m'),
        'bd4sex.nl': ('', 'bd4sex_m'),
        'fickhub.de': 'fickhub_w',
        'fickhub.at': ('', 'fickhub_m'),
        'mesgrosachats.fr': 'mesgrosachats_w',
        'smartphonesept.fr': 'smartphonesept_w',
        'unfaithful.xxx': ('', 'unfaithful_m'),
        'getyour-gift.de': ('desktop_real_prizes_w', 'desktop_real_prizes_m'),
        'surveysandpromotionsusa.com': ('surveysandpromotionsusa_w', 'surveysandpromotionsusa_m'),
        'surveysandpromotionsonline.com': ('surveysandpromotionsusa_w', 'surveysandpromotionsusa_m'),
        'exclusiverewards.gahex.xyz': ('', 'retailusapromo_m'),
        'lp2.sweepstakescentralusa.com': ('sweepstakescentralusa_w',
                                          'sweepstakescentralusa_m'),
        '1a-gewinner.de': ('1a_ge_winner_w', '1a_ge_winner_m'),
        'quicksexmatch.com': ('', 'quicksexmatch_m'),
        'unsplash.com': ('date_photo', ''),
        'mysecretmaturecontact.com': ('mysecretmaturecontact_w', ''),
        'lisa18.com.ar': ('lisa18_w', 'lisa18_m'),
        'kiwimilfs.co.nz': ('', 'kiwimilfs_m'),
        'big-kiss.com': ('big_kiss_w', 'big_kiss_m'),
        'segretimatureflirt.com': ('segretimatureflirt_w', ''),
        'yoursecretmatch.com': ('', 'yoursecretmatch_m'),
        'flirteosmadurosanonimos.com': ('flirteosmadurosanonimos_w', ''),
        'maturematchcontact.com': ('', 'maturematchcontact_m'),
        'consumerproductstar.com': ('consumerproductstar_w', 'consumerproductstar_m'),
        'uartigflirt.com': ('', 'uartigflirt_m'),
        'bareennat.dk': ('', 'bareennat_m'),
        'leboncoup.net': ('leboncoup_w', ''),
        'hashtag-cougar.com': ('', 'hashtag_cougar_m'),
        'comeandflirt.com': ('', 'comeandflirt_m'),
        'localmilfscrush.com': ('', 'localmilfscrush_m'),
        'banglocals.com': ('', 'banglocals_m'),
        'rapidprivatelnk.com': ('', 'rapidprivatelnk_m'),
        'shaghookup.com': ('', 'shaghookup_m'),
        'milfdisposte.it': ('milfdisposte_w', 'milfdisposte_m'),
        'buen-polvo.es': ('buen_polvo_w', 'buen_polvo_m'),
        'lonelyaffair.com': ('', 'lonelyaffair_m'),
        'dein-probierpaket.de': ('dein_probierpaket_w',
                                 'dein_probierpaket_m'),
        'segretipiccanti.it': ('', 'segretipiccanti_m'),
        'alpha-lam.co.uk': ('alpha_lam_w', 'alpha_lam_m'),
        'c-date.com.mx': ('', 'c_date_m'),
        'victoriabrides.com': ('', 'victoriabrides_m'),
        'competitioncentral.com.au': ('competitioncentral_w',
                                      'competitioncentral_m'),
        'desktop.real-prizes.co.uk': 'desktop_real_prizes_uk_w',
        'restaurantpromotionsusa.com': ('restaurantpromotionsusa_w', 'restaurantpromotionsusa_m'),
        'rlcontrol.de': ('desktop_real_prizes_w', 'desktop_real_prizes_m'),
        'groceries-voucher.win-shopping-vouchers-7547.com': ('win_shopping_vouchers_w',
                                                             'win_shopping_vouchers_m'),
        'sexcontactspot.com': ('', 'sexcontactspot_m'),
        'securelanderpass.com': ('', 'securelanderpass_m'),
        'willigemilfs.de': ('willigemilfs_w', 'willigemilfs_m'),
        'willigemilfs.at': ('willigemilfs_w', 'willigemilfs_m'),
        'myredcasino.com': ('myredcasino_w', 'myredcasino_m'),
        'secretsexxxlocators': ('', 'localfling_m'),
        'sinder1.com': ('', 'lospollos_us_wap_m'),
        'wantubad.com': ('wantubad_w', ''),
        'delightsexy.com': ('delightsexy_w', ''),
        'aussiecrush.com': ('', 'aussiecrush_m'),
        'meet-a-cougar.com': ('meet_a_cougar_w', ''),
        'ukprize.co.uk': ('ukprize_w', 'ukprize_m'),
        'imperialbonusclub.com': ('imperialbonusclub_w', 'imperialbonusclub_m'),
        'mybonuscommunity.com': ('mybonuscommunity_w', 'mybonuscommunity_m'),
        'apple.ln1.quiztionnaire.com': ('apple_quiztionnaire_w', 'apple_quiztionnaire_m'),
        'phone-x.win-shopping-vouchers-7547.com': ('phone_x_shopping_vouchers_w'),
        'x-phone.win-shopping-vouchers-7547.com': ('x_phone_shopping_vouchers_w'),
        'x-phone.win-shopping-vouchers-4323.com': ('x_phone_shopping_vouchers_w'),
        'x-phone.win-shopping-vouchers-8936.com': ('x_phone_shopping_vouchers_w'),
        'm.win-shopping-vouchers-7547.com': ('', 'win_shopping_vouchers_m'),
        'm.product-testing-uk-2054.com': ('', 'win_shopping_vouchers_m'),
        'm.win-shopping-vouchers-1242.com': ('', 'win_shopping_vouchers_m'),
        'gift.win-shopping-vouchers-7547.com': ('win_shopping_vouchers_w', ''),
        'gift.win-shopping-vouchers-1242.com': ('win_shopping_vouchers_w', ''),
        'iphone7-win.win-shopping-vouchers-7547.com': ('win_shopping_vouchers_w', ''),
        'iphone7-win.win-shopping-vouchers-1242.com': ('win_shopping_vouchers_w', ''),
        'planetickets.win-shopping-vouchers-7547.com': ('win_shopping_vouchers_w', ''),
        'win-shopping-vouchers-5252.com': ('win_shopping_vouchers_w', ''),
        'tour.win-shopping-vouchers-1242.com': ('win_shopping_vouchers_w', ''),
        'winner.win-shopping-vouchers-1242.com': ('win_shopping_vouchers_w', ''),
        'giftcards.win-shopping-vouchers-1242.com': ('win_shopping_vouchers_w', ''),
        'furniture-giftcard.win-shopping-vouchers-1242.com': ('win_shopping_vouchers_w', ''),
        'vacation.win-shopping-vouchers-1242.com': ('win_shopping_vouchers_w', ''),
        'shop-voucher.win-shopping-vouchers-1242.com': ('win_shopping_vouchers_w', ''),
        'gaming-console.win-shopping-vouchers-9522.com': ('win_shopping_vouchers_w', ''),
        'galaxy-love.com': ('galaxy_love_w', 'galaxy_love_m'),
        'web.de': ('email_de_w', ''),
        'gmx.net': ('email_de_w', ''),
        't-online.de': ('email_de_w', ''),
        '4.dating': ('4_dating_w', '4_dating_m'),
        'snapfick.de': ('', 'snapfick_m'),
        'tumblr.com': ('tumblr_w', ''),
        'freudige-nachricht.de': ('freudige_nachricht_w', 'freudige_nachricht_m'),
        'secretsexxxlocators.com': ('', 'secret_locators_m_preland'),
        'timefor-dating.com': ('timefor_dating_w_preland', 'timefor_dating_m_preland'),
        'kikdating.club': ('', 'kikdating_m_preland'),
        'instagirlsonline.com': ('', 'instagirlsonline_m_preland'),
        'rencontre-proche.com': ('', 'rencontre_proche_m'),
        '5a7coquin.com': ('', '5a7coquin_m'),
        'wellhello.com': ('', 'wellhello_m'),
        'letsbesexy.com': ('', 'letsbesexy_m_surf'),
        'uksexmatch.com': ('', 'uksexmatch_m'),
        'hotmilfs.fi': ('hotmilfs_fi_w', 'hotmilfs_fi_m'),
        'datarealm.de': ('dummy', ''),
        'onlineprizedraws-9821.com': ('online_prize_draws_w'),
        'm.onlineprizedraws-9821.com': ('', 'online_prize_draws_m'),
        'ukprizecompetition.com': ('uk_prize_competition_w', 'uk_prize_competition_m'),
        'nouveautels.fr': ('nouveautels7_w', 'nouveautels7_m'),
        'whatsex.es': ('whatsex_w', 'whatsex_m'),
        'whatsex.at': ('whatsex_w', 'whatsex_m'),
        'fuckr.securesafeaccess.com': ('', 'lospollos_us_wap_m'),
        'yahoo.com': ('email_yahoo_de_w', ''),
        'leadingcompetitions.com': ('leadingcompetitions_w', 'leadingcompetitions_m'),
        'hqtraffz.com': ('taffz_w_preland', 'taffz_m_preland'),
        'live.com': ('email_live_de_w', ''),
        'slapperbook.co.uk': ('', 'slapperbook_m_surf'),
        'explorereward.com': ('rewardexplorers_w', ''),
        'commelabraise.com': ('commelabraise_w', ''),
        'm.mamrencontres.com': ('', 'mamrencontres_m'),
        'datetrckr.com': ('', 'datetrckr_m_preland'),
        'fickbuddies.ch': ('', 'fickbuddies_m'),
        'accounts.google.com': ('email_google_w', ''),
        'coqcorico.fr': ('coqcorico_w', 'coqcorico_m'),
        'youwant2win.com': ('want_to_win_w', 'want_to_win_m'),
        'derflirtplatz.com': ('', 'derflirtplatz_m'),
        'coupon-jaeger-0242.com': ('coupon_jaeger_w', 'coupon_jaeger_m'),
        'coupon-jaeger-9530.com': ('coupon_jaeger_w', 'coupon_jaeger_m'),
        'xpartner.com': ('xparter_w', 'xparter_m'),
        'amateurcommunity.com': ('amateurcommunity_w', 'amateurcommunity_m'),
        'reifefrauen.com': ('', 'reifefrauen_m'),
        'cafecoquin.com': ('cafecoquin_w', ''),
        'mydirtyfling.com': ('', 'mydirtyfling_m'),
        'good-shag.com': ('', 'good_shag_m'),
        'm.cougarpourmoi.com': ('', 'cougarpourmoi_m'),
        'sinder15.com': ('', 'lospollos_us_wap_m'),
        'victoriahearts.com': ('victoriahearts_w', ''),
        '6.dating': ('6_dating_w', '6_dating_m'),
        'hookupgirlfriends.com': ('hookupgirlfriends_w', 'hookupgirlfriends_m'),
        'giveaways-uk.com': ('giveaways_uk_w', 'giveaways_uk_m'),
        'secretmilfs.se': ('', 'secretmilfs_m'),
        'minemodnekontakter.com': ('', 'minemodnekontakter_m'),
        'buurtsexen.be': ('buurtsexen_w', ''),
        '45pluskontakt.com': ('45pluskontakt_w', '45pluskontakt_m'),
        'swipeonline.nl': ('', 'swipeonline_m'),
        'norwaysexdates.com': ('norwaysexdates_w', 'norwaysexdates_m'),
        'snapbang.com': ('', 'snapbang_m'),
        'simplehookup.com': ('', 'simplehookup_m'),
        'easysex.com': ('', 'easysex_m'),
        'contactosabuelas.com': ('contactosabuelas_w', 'contactosabuelas_m'),
        'offerx.co.uk': ('offerx_w', 'offerx_m'),
        'deine-gewinn-seite.de': ('deine_gewinn_seite_w', 'deine_gewinn_seite_m'),
        'milolead.com': ('milolead_w', 'milolead_m'),
        'supermarkt-coupon.de': ('supermarkt_gutschein_w', ''),
        'supermarkt-gutschein.com': ('supermarkt_gutschein_w', ''),
        'x-phone.test-produkte-kostenlos-4893.com': ('x_phone_test_produkte_kostenlos_w', ''),
        'tatuadas.es': ('', 'tatuadas_m'),
        'masslover.com': ('', 'masslover_m'),
        'ma-voisine.fr': ('', 'ma_voisine_m'),
        'win-phone.waardebon-acties-nl-3902.com': ('waardebon_acties_w', ''),
        'm.waardebon-acties-nl-3902.com': ('', 'waardebon_acties_m'),
        'flirtkontaktdienst.com': ('flirtkontaktdienst_w', ''),
        'phone-x.test-produkte-kostenlos-4893.com': ('coupon_jaeger_w', ''),
        'envie2sex.com': ('', 'envie2sex_m'),
        'entre-couple.com': ('', 'entre_couple_m'),
        'jouwpikanteprofielen.nl': ('jouwpikanteprofielen_w', ''),
        'tire-ce-soir.com': ('', 'tire_ce_soir_m'),
        'coquine-club.com': ('', 'coquine_club_m'),
        'juste1soir.com': ('', 'juste1soir_m'),
        'enter-and-win.com': ('enter_and_win_w', ''),
        'm.win-shopping-vouchers-5430.com': ('', 'win_shopping_vouchers_m'),
        'freecrush.com': ('', 'freecrush_m'),
        'instabang.com': ('', 'instabang_m'),
        'instabang.ch': ('', 'instabang_m'),
        'frozen-xmas.win-shopping-vouchers-5430.com': ('win_shopping_vouchers_w', 'win_shopping_vouchers_m'),
        'win-2-tickets.win-shopping-vouchers-5430.com': ('win_shopping_vouchers_w', 'win_shopping_vouchers_m'),
        'm.win-shopping-vouchers-5811.com': ('', 'win_shopping_vouchers_m'),
        'win-shopping-vouchers-2522.com': ('win_shopping_vouchers_w', ''),
        'coupon-jaeger-4323.com': ('coupon_jaeger_w', 'coupon_jaeger_m'),
        'mobile.localmilfselfies.com': ('', 'localmilfselfies_m'),
        'rencontre-chrono.com': ('', 'rencontre_chrono_m'),
        'neues-handy.com': ('neues_handy_w', ''),
        'brandneu-smartphone.com': ('neues_handy_w', ''),
        'brandneu-smartphone.de': ('neues_handy_w', ''),
        'mobile.amateurcougars.fr': ('', 'amateurcougars_m'),
        'femmedisponible.com': ('', 'femmedisponible_m'),
        'xmilfs.com': ('', 'xmilfs_m'),
        'amazando.org': ('amazando_w', 'amazando_m'),
        'amazando.co': ('amazando_w', 'amazando_m'),
        'baise-la-ce-soir.com': ('', 'baise_la_ce_soir_m'),
        'play.google.com': ('', 'play_google_m'),
        'bumshub.de': ('', 'bumshub_m'),
        'xmeets.com': ('xmeets_w', 'xmeets_m'),
        'winrewardofficial.com': ('winrewardofficial_w', 'winrewardofficial_m'),
        'win-shopping-vouchers-9833.com': ('win_shopping_vouchers_w'),
        'olydig.com': ('', 'olydig_m'),
        'boardselectworld.com': ('boardselectworld_w', 'boardselectworld_m'),
        'belohnungsseite.de': ('belohnungsseite_w', 'belohnungsseite_m'),
        'coupon-jaeger-0193.com': ('coupon_jaeger_w', 'coupon_jaeger_m'),
        'diskretflirt.com': ('', 'diskretflirt_m'),
        'mysecretfling.com': ('', 'mysecretfling_m'),
        'uk.real-prizes.co.uk': ('real_prizes_w', ''),
        'localdates4.com': ('', 'lospollos_us_wap_m'),
        'dateformore.de': ('', 'dateformore_m'),
        'slutindex.com': ('', 'slutindex_m'),
        'abenteuerx.com': ('', 'date_abenteuerx_m'),
        'hornhub.co.uk': ('hornhub_w', 'hornhub_m'),
        'digitalconcept.offerstrack.net': ('digitalconcept_w_preland', ''),
        'secondfling.com': ('secondfling_w', 'secondfling_m'),
        'fuckswipe.com': ('', 'fuckswipe_m'),
        'gifthunter.top': ('gifthunter_w_preland', ''),
        'nationalprizes.club': ('nationalprizes_w_preland', ''),
        'deinemeinungzaehlt.com': ('desktop_real_prizes_w', 'desktop_real_prizes_m'),
        'whileyouhavetheprize.stream': ('whileyouhavetheprize_w_preland', ''),
        'awesomeoffers21.com': ('awesomeoffers21_w', 'awesomeoffers21_m'),
        'my-prize.co.uk': ('desktop_real_prizes_uk_w', ''),
        'securesaferoute.com': ('securesaferoute_w', 'securesaferoute_m'),
        'member-hookup.com': ('', 'member_hookup_m_surf'),
        'megahook-up.com': ('', 'member_hookup_m_surf'),
        'freehookuptonight.com': ('', 'member_hookup_m_surf'),
        'freelocaldates.com': ('', 'member_hookup_m_surf'),
        'members-dating.com': ('', 'members_dating_m_surf'),
        'romancetale.com': ('', 'romancetale_m'),
        'instantfuckbook.com': ('', 'instantfuckbook_m'),
        'amazandoleads.co': ('amazando_w'),
        'amazandoleads.com': ('amazando_w', 'amazando_m'),
        'expertsupersurvey.today': ('expertsupersurvey_w_preland', ''),
        'meinreiferflirtplatz.com': ('', 'meinreiferflirtplatz_m'),
        '40plushausfrauen.com': ('', '40plushausfrauen_m'),
        'milf-finder.com': ('', 'milf_finder_m'),
        'sexexpressen.se': ('', 'sexexpressen_m'),
        'milf-area.se': ('', 'milf_area_m_surf'),
        '100lendemain.com': ('100lendemain_w', '100lendemain_m'),
        'pour1nuit.com': ('pour1nuit_w', 'pour1nuit_m'),
        'citylove.es': ('citylove_w', 'citylove_m'),
        'de5a7.com': ('de5a7_w', 'de5a7_m'),
        'obsedessexuels.com': ('obsedessexuels_w', 'obsedessexuels_m'),
        'cougar-chrono.com': ('', 'cougar_chrono_m'),
        'planscul.com': ('planscul_w', 'planscul_m'),
        'nationalsconsumerscenter.co.uk': (
            'nationalsconsumerscenter_w', 'nationalsconsumerscenter_m'),
        'snapmilfs4fuck.com': ('', 'snapmilfs4fuck_m'),
        'instashag.com': ('instashag_w', 'instashag_m'),
        'chope-la.com': ('', 'chope_la_m'),
        'flirt.com': ('', 'flirt_m'),
        'publicsurveypanel.com': ('publicsurveypanel_w', ''),
        'affectingprizes.loan': ('affectingprizes_w_preland', ''),
        'keyboardtester.com': ('keyboardtester_w', ''),
        'stripchat.com': ('', 'stripchat_m'),
        'try-and-keep.com': ('try_and_keep_w', ''),
        'reifenflirtgesucht.com': ('reifenflirtgesucht_w', ''),
        'mieiflirtmaturicaldi.com': ('', 'mieiflirtmaturicaldi_m'),
        'badults.com.au': ('badults_w', ''),
        'quiztionnaire.com': ('apple_quiztionnaire_w', ''),
        'testerregistrationpanel.com': ('amazando_w', 'amazando_m'),
        'uksexfling.com': ('', 'uksexfling_m'),
        'flirtdate18.com': ('s_dating_w', 's_dating_m'),
        'jump-your-bones.com': ('', 'jump_your_bones_m_preland'),
        'freesexmatch.com': ('', 'freesexmatch_m'),
        'flirtyslapper.com': ('', 'flirtyslapper_m'),
        'dynamic-rewards.org': ('dynamic_rewards_w', 'dynamic_rewards_m'),
        'xpress.com': ('', 'xpress_m'),
        'the-best-presents25.com': ('', 'the_best_presents25_m'),
        'thebestgiveaways27.com': ('', 'the_best_presents25_m'),
        'dynamicleads.org': ('', 'dynamicleads_m'),
        'emmamadchen.de': ('emmamadchen_w', 'emmamadchen_m'),
        'amazandoleads.net': ('amazando_w', 'amazando_m'),
        'monthlycompetition.com': ('', 'want_to_win_m'),
        'secretsexxxlocators.com': ('secretsexxxlocators_w_preland', 'secretsexxxlocators_m_preland'),
        'sexclub6.com': ('sexclub6_w', 'sexclub6_m'),
        'oneamour.com': ('sexclub6_w', 'sexclub6_m'),
        'monmarchematureflirt.com': ('monmarchematureflirt_w', ''),
        'productsgiveaway-uk-432.com': ('giveaways_uk_w', 'giveaways_uk_m'),
        'summerswipe.com': ('summerswipe_w', 'summerswipe_m'),
        'kissrussianbeauty.com': ('kissrussianbeauty_w', 'kissrussianbeauty_m'),
        'charmdate.com': ('kissrussianbeauty_w', 'kissrussianbeauty_m'),
        'amateurcougars.fr': ('amateurcougars_w', ''),
        'aventuremature.com': ('aventuremature_w', ''),
        '40plushausfrauen.com': ('40plushausfrauen_w', ''),
        'regionflirts.com': ('regionflirts_w', ''),
        'amantenocturna.com': ('amantenocturna_w', ''),
        'mydirtyfling.com': ('mydirtyfling_w', ''),
        'scopamici.com': ('scopamici_w', ''),
        'new-datings-finder.com': ('', 'new_datings_finder_m_preland'),
        'cougarpourmoi.com': ('', 'cougarpourmoi_m'),
        'wooga2.info': ('', 'wooga2_m_preland'),
        'yoursexamusement.com': ('', 'yoursexamusement_m_preland'),
        'wantmatures.com': ('', 'wantmatures_m'),
        'blondekiss.com': ('', 'blondekiss_m_preland'),
        'naughtydate.com': ('', 'naughtydate_m'),
        'heisseaffaire24.de.com': ('', 'heisseaffaire24_m'),
        'heisseaffaire24.com': ('', 'heisseaffaire24_m'),
        'quickflirt.com': ('', 'quickflirt_m'),
        'instantcougar.com': ('', 'instantcougar_m'),
        'c-date.de': ('', 'c_date_de_m'),
        'snapsext.com': ('', 'snapsext_m'),
        'quiztionnaire.com': ('', 'apple_quiztionnaire_m'),
        'benaughty.com': ('benaughty_w', 'benaughty_m'),
        'maturesforfuck.com': ('', 'maturesforfuck_m'),
        'best-sexy-partner2.org': ('', 'best_sexy_partner2_m_preland'),
        'secretmilfclub.com': ('secretmilfclub_w', ''),
        'affairesecrete.com': ('', 'affairesecrete_m'),
        'casualdating.fr': ('', 'casualdating_m'),
        'freesnapmilfs.com': ('', 'freesnapmilfs_m'),
        'localdates6.com': ('', 'wellhello_m'),
        'localdates69.com': ('', 'wellhello_m'),
        'localdates11.com': ('', 'wellhello_m'),
        'fling.com': ('', 'fling_m'),
        'trenced.com': ('', 'trenced_m'),
        'wintopawards.com': ('', 'wintopawards_m'),
        'sonaughty.com': ('', 'sonaughty_m'),
        'snapcheat1.com': ('', 'wellhello_m'),
        'testonsgagnons.com': ('testonsgagnons_w', 'testonsgagnons_m'),
        'giveaways-fr.com': ('giveaways_fr_w', 'giveaways_fr_m'),
        'soleil456.com': ('soleil456_w', 'soleil456_m'),
        '123merci.com': ('123merci_w', '123merci_m'),
        'casualdates.com': ('', 'casualdates_m'),
        'hotincontri.it': ('hotincontri_w', 'hotincontri_m'),
        'giveaways-it.com': ('giveaways_it_w', 'giveaways_it_m'),
        'vouchervinci-8743.com': ('vouchervinci_8743_w', 'vouchervinci_8743_m'),
        'cadeauxenfolie.com': ('cadeauxenfolie_w', 'cadeauxenfolie_m'),
        'viberlust.com': ('', 'best_sexy_partner2_m_preland'),
        'hotsexdate.com': ('hotsexdate_w', ''),
        'whatsex.fr': ('whatsex_fr_w', ''),
        's.dating': ('s_dating_w', 's_dating_m'),
        'my-promobox.de': ('my_promobox_w', 'my_promobox_m'),
        'das-blaue-vom-himmel.de': ('das_blaue_vom_himmel_w', 'das_blaue_vom_himmel_m'),
        'ausgewaehltergewinner.de': ('ausgewaehltergewinner_w', 'ausgewaehltergewinner_m'),
        'greenflamingo-deutschland.com': ('greenflamingo_deutschland_w', 'greenflamingo_deutschland_m'),
        'dlzoffers.com': ('dlzoffers_w', 'dlzoffers_m'),
        'mitmachenundbelohntwerden.de': ('mitmachenundbelohntwerden_w', 'mitmachenundbelohntwerden_m'),
        'giveaways-au.com': ('giveaways_au_w', 'giveaways_au_m'),
        'drawforeveryone.com': ('drawforeveryone_w', 'drawforeveryone_m'),
        'offer2win.com': ('offer2win_w', 'offer2win_m'),
        'super-markt-coupon.de': ('super_markt_coupon_w', 'super_markt_coupon_m'),
        'loveamusements.com': ('', 'loveamusements_m_preland'),
        'get-best-dating.com': ('', 'get_best_dating_m_preland'),
        'yoursecrethookup.com': ('', 'wellhello_m'),
        'rdv-pas-serieux.com': ('', 'rdv_pas_serieux_m'),
        'wildspank.com': ('wildspank_m', 'wildspank_m'),
        'sexintouch.com': ('sexintouch_m', 'sexintouch_m'),
        'together2night.com': ('', 'together2night_m'),
        'takethebestprize.com': ('takethebestprize_w', 'takethebestprize_m'),
        'saucysingles.com': ('', 'saucysingles_m'),
        'somuchwins.com': ('want_to_win_w', 'want_to_win_m'),
        'gibmirsex.com': ('', 'gibmirsex_m'),
        'securecloud-dt.com': ('securecloud_dt_w', ''),
        'ussr-star.com': ('ussr_star_w', ''),
        'somuchwins.com': ('somuchwins_w', 'somuchwins_m'),
        'pornhub.com': ('pornhub_w', ''),
        'milfsunlimited.com': ('', 'milfsunlimited_m'),
        'sweepstakescentralusa.com': ('', 'sweepstakescentralusa_m'),
        'tube8.com': ('tube8_w', ''),
        'vk.com': ('', 'zagruzochki_m'),
        'monthlycompetition.com': ('monthlycompetition_m', 'monthlycompetition_m'),
        'zagruzochki.ru': ('monthlycompetition_m', 'monthlycompetition_m'),
        'priceselections.com': ('priceselections_w', 'priceselections_m'),
        'chateauneufdupape.space': ('chateauneufdupape_w', 'chateauneufdupape_m'),
        'quiztionnaire.com': ('apple_quiztionnaire_w', 'quiztionnaire_m'),
        'dynamicleads.org': ('dynamicleads_w', ''),
        'datingum.com': ('datingum_w', 'datingum_m'),
        'illicitpassion.com': ('illicitpassion_w', 'illicitpassion_m'),
        'c.dating': ('', '4_dating_m'),
        'duggederuder.com': ('', 'duggederuder_m'),
        'awesomegiveaway18.com': ('', 'awesomegiveaway18_m'),
        'specialoffers15.com': ('awesomegiveaway18_w', 'specialoffers15_m'),
        'xclub.nl': ('', 'xclub_m'),
        'giftstoday.mobi': ('giftstoday_w_preland', 'giftstoday_w_preland'),
        'consumerrewardscenter.com': ('consumerrewardscenter_w', ''),
        'premiumrewardsusa.com': ('premiumrewardsusa_w', ''),
        'primerewardsusa.com': ('premiumrewardsusa_w', ''),
        'smoothreward.com': ('premiumrewardsusa_w', ''),
        'primerewardz.com': ('premiumrewardsusa_w', ''),
        'ezreward.net': ('premiumrewardsusa_w', ''),
        'offerisle.com': ('', 'offerisle_m'),
        'dynamic-award.com': ('dynamic_award_w', 'dynamic_award_m'),
        'lead-factory.org': ('lead_factory_w', ''),
        # 'baisedesmilfs.fr': ('', 'baisedesmilfs_m'),
        'baisedesmilfs.fr': ('', 'baisedesmilfs_m'),
        'want-to-be-a-winner.com': ('takethebestprize_w', 'takethebestprize_w'),
        'haisvoltato.it': ('haisvoltato_w', 'haisvoltato_m'),
        'safesecureentry.com': ('', 'freesnapmilfs_m'),
        'smartphone-gewinner.de': ('supermarkt_gutschein_w', ''),
        'chateauneufdupape.space': ('', 'priceselections_m'),
        'nationaldigitalsurvey.com': ('nationaldigitalsurvey_w', ''),
        'onlinenationalpromo.com': ('onlinenationalpromo_w', ''),
        'my-new-handy.com': ('supermarkt_gutschein_w', ''),
        'meine-burger.com': ('supermarkt_gutschein_w', ''),
        'vouchersavenue.com': ('vouchersavenue_w', ''),
        'lead-competition.com': ('lead_competition_w', 'lead_competition_m'),
        'smartphone-gewinner.de': ('supermarkt_gutschein_w', ''),
        'vinci-buono-spesa.com': ('', 'want_to_win_m'),
        'awesomegiveaways19.com': ('awesomegiveaways19_w', 'awesomegiveaways19_m'),
        'un-viaggio-per-te.com': ('', 'un_viaggio_per_te_m'),
        'uberhorny.com': ('', 'uberhorny_m'),
        'llevateloahora.com': ('', 'llevateloahora_m'),
        'hushlove.com': ('', 'hushlove_m'),
        'takeyourvoucher.com': ('takeyourvoucher_w', 'takeyourvoucher_m'),
        'amazingprizecompetition.com': ('amazingprizecompetition_w', 'amazingprizecompetition_m'),
        'prize400.info': ('', 'prize400_m'),
        'consumerdigitalsurvey.com': ('consumerdigitalsurvey_w', 'consumerdigitalsurvey_m'),
        'dealzingo.com': ('dealzingo_w', 'dealzingo_m'),
        'getyourgifts.xyz': ('getyourgifts_w_preland', 'getyourgifts_m_preland'),
        'premiosfaciles.com': ('premiosfaciles_w', 'premiosfaciles_m'),
        'nationalconsumerscenter.co.uk': ('nationalconsumerscenter_w', 'nationalconsumerscenter_m'),
        'tuvalediario.com': ('tuvalediario_w', 'tuvalediario_m'),
        'camsoda.com': ('camsoda', 'camsoda_m'),
        'jouwkansomtewinnen.nl': ('jouwkansomtewinnen_w', 'jouwkansomtewinnen_m'),
        'notjustanothergiftcard.com': ('jouwkansomtewinnen_w', 'jouwkansomtewinnen_m'),
        'youcanwinthis.com': ('youcanwinthis_w', 'youcanwinthis_m'),
        'specialrewards16.com': ('specialrewards16_w', 'specialrewards16_m'),
        'luckychooser.net': ('luckychooser_w', ''),
        'amazinggiveaways27.com': ('specialoffers15_w', 'specialoffers15_m'),
        'hornhub.com': ('hornhub_w', 'hornhub_m'),
        'neontrk.com': ('', 'neontrk_m_preland'),
        'nationalconsumerreview.co.uk': ('', 'nationalconsumerreview_m'),
        'win-leadprize.com': ('', 'lead_competition_m'),
        'norskflirtclub.com': ('norskflirtclub_w', 'norskflirtclub_m'),
        '12xlwin5.net': ('', '12xlwin5_m'),
        'chcisexrande.cz': ('', 'chcisexrande_m'),
        'win-leadprize.com': ('lead_competition_w', 'lead_competition_m'),
        'scharferchat.com': ('scharferchat_w', 'scharferchat_m'),
        'uk-1165-happybox.com': ('uk_1165_happybox_w', 'uk_1165_happybox_m'),
        'quiztionnaires.com': ('apple_quiztionnaire_w', 'apple_quiztionnaire_m'),
        'enter-and-win.com': ('enter_and_win_w', 'enter_and_win_m'),
        '118118-kingdomgiveaways.com': ('kingdomgiveaways_w', 'kingdomgiveaways_m'),
        'snap-vite.com': ('', 'snap_vite_m'),
        'leadprizerace.com': ('leadprizerace_w', ''),
        'enjoyslot.net': ('vulkan_w', 'vulkan_m'),
        'successfulslot.net': ('vulkan_w', 'vulkan_m'),
        'successfulslot.com': ('vulkan_w', 'vulkan_m'),
        'slotofluck.net': ('vulkan_w', 'vulkan_m'),
        'wowcasino.net': ('vulkan_w', 'vulkan_m'),
        'wowlucky.net': ('vulkan_w', 'vulkan_m'),
        'oz-gifts.com': ('oz_gifts_m', 'oz_gifts_m'),
        'snapdate.fr': ('snapdate_w', 'snapdate_m'),
        'coquineadraguer.com': ('', 'together2night_m')
    }
    #     if isinstance(inventory[domen], tuple):
    #         web, wap = inventory[domen]
    #     else:
    #         web = wap = inventory[domen]
    #     inv = Inventory(domen=domen, wap=wap, web=web)
    #     db.session.add(inv)
    #     db.session.commit()
    # 100/0
    # return 'developer_po't
    if not manually:
        return 'developer_po'
        po_key = request.get("page_object_key")
        po_type = request.get("traffic_type")
        # return 'developer_po'
        inventory = Inventory.query.filter(Inventory.domen == po_key)[0]
        return inventory.web if po_type == 'web' else inventory.wap
    po_key = request.get("page_object_key")
    po_type = request.get("traffic_type")
    if not po_key:
        return None
    # logger.debug(po_key)
    po_name = inventory.get(po_key)
    if isinstance(po_name, tuple):
        return po_name[0] if po_type == "web" else po_name[1]
    else:
        return po_name


def get_ip(country):
    with open('./countries/{}.txt'.format(country), 'r') as f:
        ips = f.read().split('\n')

    ip = random.choice(ips)

    open('./usually_ips.txt', 'a').close()
    with open('./usually_ips.txt', 'r') as f:
        ips = f.read().split('\n')

    if ip in ips:
        return get_ip(country)
    else:
        print ip

        with open('./usually_ips.txt', 'a') as f:
            f.write('\n{}'.format(ip))

        return ip


def get_surf_task():
    # start
    virtdisplay = True
    landing_url = ''
    if manually:
        country = 'FR'
        traffic_type = 'web'
        # traffic_type = 'wap'
        task_type = "surf"  # "click", "surf"

        landing_url = "https://tracksfastest.com/?a=11145&c=50733&s1="

        tds_url = landing_url
        ref_url = tds_url
        ref_key_url = tds_url

        email_type = 'soi'
        virtdisplay = False
        surf_task_id = random.randint(1, 100)
    else:
        surf_task = SurfTask.query.all()[-1]
        country = surf_task.country
        traffic_type = surf_task.traffic_type
        task_type = "surf"  # "click", "surf"

        landing_url = surf_task.landing_url
        tds_url = surf_task.tds_url
        ref_url = tds_url

        virtdisplay = False
        email_type = surf_task.email_type
        surf_task_id = surf_task.id

    doi = "confirm_registration" if email_type == 'doi' else ''
    checks_url = ''''''

    country = 'GB' if country == 'UK' else country

    ip = get_ip(country)
    # lumi_username = "lum-customer-pavelkushch-zone-static-ip-{}".format(ip)
    lumi_username = "lum-customer-trilink-zone-gen-country-{0}-dns-remote-session-rand{1}".format(
        country, random.randint(1, 10000)
    )
    # lumi_password = "h0e1z7ex471s"
    lumi_password = "078jx2kqfuuk"
    lumi_proxy = "zproxy.luminati.io"

    if country == 'NL':
        # Use superproxy in Netherlands
        lumi_proxy = "servercountry-nl.zproxy.luminati.io"

    lumi_port = 22225

    j = {"a": "get_surf_task",
         "ipinfo_url": "http://ipinfo.io/json",
         "proxy": {"params": {"country": country.lower(),
                              "good_ip_attempts": 25,
                              "password": lumi_password,
                              "port": lumi_port,
                              "proxy": lumi_proxy,
                              "username": lumi_username},
                   # =backward compatibility===========================
                   "country": country.lower(),
                   "good_ip_attempts": 25,
                   "password": lumi_password,
                   "port": lumi_port,
                   "proxy": lumi_proxy,
                   "username": lumi_username,
                   # ============================
                   "type": "lumi"},
         "success": True,
         "surf_task": {"account_id": random.randint(1, 9),
                       "age_max": random.randint(26, 40),
                       "age_min": random.randint(19, 25),
                       "country": country,
                       "cpa_offer_id": random.randint(1000, 9999),
                       "group_key": "test",
                       "is_paid": True,
                       'virtdisplay': virtdisplay,
                       'checks_url': checks_url,
                       "landing_url": landing_url,
                       "params": {
                           "disable_images": False,
                           "payment_probability": 0,
                           "required_surf": True,
                           "ip_reuse_days": 120,
                       },
                       "male_percentage": 100,
                       "network_name": "test",
                       "page_object_id": random.randint(1, 99),
                       "parent_surf_task_id": 4268,
                       "po_filename": "po_filename",
                       "product_name": "product_name",
                       "project_id": random.randint(10, 99),
                       "referrer_key_url": ref_key_url,
                       "referrer_value_url": ref_url,
                       "surf_behaviour": {"act_5": {"steps": [
                           {
                               "action": "landing_register",
                               # "params": {"email_type": "doi"},
                               "params": {"email_type": email_type}
                           },
                           {
                               "action": doi,
                               "params": None
                           },
                           # {"action": "skip_funnel",
                           # "params": None},
                           {
                               "action": "fill_funnel",
                               "params": None
                           },
                           {
                               "action": "upload_photo",
                               "params": None
                           },
                           # {"action": "site_surf",
                           # "params": {"10": 100}},
                           {
                               "action": "site_surf",
                               "params": {"5": 100}
                           }
                       ]}},
                       "retention_behaviour": {
                           "act_5": {
                               "steps": [
                                   {
                                       "action": "retention_login_index",
                                       "params": None
                                   },
                                   # {"action": "retention_login_email",
                                   # "params": None},
                                   # {"action": "fill_funnel",
                                   # "params": None},
                                   {
                                       "action": "skip_funnel",
                                       "params": None
                                   },
                                   # {"action": "upload_photo",
                                   # "params": None},
                                   {
                                       "action": "retention_surf",
                                       "params": None
                                   },
                                   # {"action": "site_surf",
                                   # "params": {"10": 100}},
                               ]}},
                       "retention_day": [50, 15, 8, 5, 1, 3, 2, 1],
                       "retention_day_n": 1,
                       "retention_stats": {"act_5": 100},
                       "run_at": "2017-06-08T09:20:06",
                       "surf_stats": {"act_5": 100},
                       "surf_task_id": surf_task_id,
                       "task_type": task_type,
                       "tds_url": tds_url,
                       "traffic_type": traffic_type},
         "type": None,  # backward compatibility
         }
    return j
